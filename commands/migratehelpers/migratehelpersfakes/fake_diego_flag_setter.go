// This file was generated by counterfeiter
package migratehelpersfakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/diego-enabler/commands/migratehelpers"
)

type FakeDiegoFlagSetter struct {
	SetDiegoFlagStub        func(string, bool) ([]string, error)
	setDiegoFlagMutex       sync.RWMutex
	setDiegoFlagArgsForCall []struct {
		arg1 string
		arg2 bool
	}
	setDiegoFlagReturns struct {
		result1 []string
		result2 error
	}
}

func (fake *FakeDiegoFlagSetter) SetDiegoFlag(arg1 string, arg2 bool) ([]string, error) {
	fake.setDiegoFlagMutex.Lock()
	fake.setDiegoFlagArgsForCall = append(fake.setDiegoFlagArgsForCall, struct {
		arg1 string
		arg2 bool
	}{arg1, arg2})
	fake.setDiegoFlagMutex.Unlock()
	if fake.SetDiegoFlagStub != nil {
		return fake.SetDiegoFlagStub(arg1, arg2)
	} else {
		return fake.setDiegoFlagReturns.result1, fake.setDiegoFlagReturns.result2
	}
}

func (fake *FakeDiegoFlagSetter) SetDiegoFlagCallCount() int {
	fake.setDiegoFlagMutex.RLock()
	defer fake.setDiegoFlagMutex.RUnlock()
	return len(fake.setDiegoFlagArgsForCall)
}

func (fake *FakeDiegoFlagSetter) SetDiegoFlagArgsForCall(i int) (string, bool) {
	fake.setDiegoFlagMutex.RLock()
	defer fake.setDiegoFlagMutex.RUnlock()
	return fake.setDiegoFlagArgsForCall[i].arg1, fake.setDiegoFlagArgsForCall[i].arg2
}

func (fake *FakeDiegoFlagSetter) SetDiegoFlagReturns(result1 []string, result2 error) {
	fake.SetDiegoFlagStub = nil
	fake.setDiegoFlagReturns = struct {
		result1 []string
		result2 error
	}{result1, result2}
}

var _ migratehelpers.DiegoFlagSetter = new(FakeDiegoFlagSetter)
