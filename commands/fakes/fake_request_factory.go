// This file was generated by counterfeiter
package fakes

import (
	"net/http"
	"sync"

	"github.com/cloudfoundry-incubator/diego-enabler/api"
	"github.com/cloudfoundry-incubator/diego-enabler/commands"
)

type FakeRequestFactory struct {
	NewGetAppsRequestStub        func(api.Filters, map[string]interface{}) (*http.Request, error)
	newGetAppsRequestMutex       sync.RWMutex
	newGetAppsRequestArgsForCall []struct {
		arg1 api.Filters
		arg2 map[string]interface{}
	}
	newGetAppsRequestReturns struct {
		result1 *http.Request
		result2 error
	}
}

func (fake *FakeRequestFactory) NewGetAppsRequest(arg1 api.Filters, arg2 map[string]interface{}) (*http.Request, error) {
	fake.newGetAppsRequestMutex.Lock()
	fake.newGetAppsRequestArgsForCall = append(fake.newGetAppsRequestArgsForCall, struct {
		arg1 api.Filters
		arg2 map[string]interface{}
	}{arg1, arg2})
	fake.newGetAppsRequestMutex.Unlock()
	if fake.NewGetAppsRequestStub != nil {
		return fake.NewGetAppsRequestStub(arg1, arg2)
	} else {
		return fake.newGetAppsRequestReturns.result1, fake.newGetAppsRequestReturns.result2
	}
}

func (fake *FakeRequestFactory) NewGetAppsRequestCallCount() int {
	fake.newGetAppsRequestMutex.RLock()
	defer fake.newGetAppsRequestMutex.RUnlock()
	return len(fake.newGetAppsRequestArgsForCall)
}

func (fake *FakeRequestFactory) NewGetAppsRequestArgsForCall(i int) (api.Filters, map[string]interface{}) {
	fake.newGetAppsRequestMutex.RLock()
	defer fake.newGetAppsRequestMutex.RUnlock()
	return fake.newGetAppsRequestArgsForCall[i].arg1, fake.newGetAppsRequestArgsForCall[i].arg2
}

func (fake *FakeRequestFactory) NewGetAppsRequestReturns(result1 *http.Request, result2 error) {
	fake.NewGetAppsRequestStub = nil
	fake.newGetAppsRequestReturns = struct {
		result1 *http.Request
		result2 error
	}{result1, result2}
}

var _ commands.RequestFactory = new(FakeRequestFactory)
